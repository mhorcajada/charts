
üéâ ¬°Storj Gateway desplegado con √©xito!
{{ if and .Values.envConfigMap.enabled .Values.envConfigMap.data }}
üîê Acceso S3:
  Endpoint: {{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.service.port }}
  Access Key:    {{ default "REPLACE_WITH_ACCESS_KEY" .Values.envConfigMap.data.STORJ_MINIO_ACCESS_KEY }}
  Secret Key:    {{ default "REPLACE_WITH_SECRET_KEY" .Values.envConfigMap.data.STORJ_MINIO_SECRET_KEY }}
{{ else if and .Values.envSecret.enabled }}
üîê Acceso S3:
  Endpoint: {{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.service.port }}
  Las credenciales se inyectan desde el Secret: `{{ .Values.envSecret.name }}`
{{ else if and .Values.vault.enabled }}
üîê Acceso S3:
  Endpoint: {{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.service.port }}
  Las credenciales se inyectan din√°micamente mediante Vault Agent Injector.
{{ else }}
üîê Acceso S3:
  Endpoint: {{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.service.port }}
  ‚ö†Ô∏è No se detectaron credenciales configuradas. Revisa `envConfigMap`, `envSecret` o Vault.
{{ end }}
üîß Modo de configuraci√≥n detectado:
{{- if and .Values.configMap.enabled .Values.initContainer.enabled }}
‚ñ∂Ô∏è Modo 1: Configuraci√≥n mediante configMap + initContainer.
  - ConfigMap:     {{ .Values.configMap.name }}
  - InitContainer: {{ .Values.initContainer.name }}
  - Montado en:    {{ .Values.configMap.mountPath | default "/etc/storj-config" }}
{{- else if and .Values.envConfigMap.enabled .Values.envConfigMap.name }}
‚ñ∂Ô∏è Modo 2: Configuraci√≥n mediante envFrom con ConfigMap.
  - ConfigMap:     {{ .Values.envConfigMap.name }}
{{- else if and .Values.envSecret.enabled .Values.envSecret.name }}
‚ñ∂Ô∏è Modo 4: Configuraci√≥n mediante envFrom con Secret.
  - Secret:        {{ .Values.envSecret.name }}
{{- else if and .Values.vault.enabled }}
‚ñ∂Ô∏è Modo 3: Configuraci√≥n mediante inyecci√≥n de secretos con HashiCorp Vault.
  - Vault Annotations configuradas en los pods.
{{- else }}
‚ö†Ô∏è No se ha detectado ninguna configuraci√≥n de entorno activa.
  Revisa los valores en `envConfigMap`, `envSecret`, `vault` o `configMap`.
{{ end }}
{{ if .Values.webUi.enabled }}
üåê WebUI:
  {{- if .Values.webUi.ingress.enabled }}
  URL (Ingress): http{{ if .Values.webUi.ingress.tls.enabled }}s{{ end }}://{{ .Values.webUi.ingress.host }}
  Puerto: {{ if .Values.webUi.ingress.tls.enabled }}443{{ else }}80{{ end }}
  {{- else }}
  Acceso interno:
    Endpoint: {{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local
    Puerto expuesto: {{ .Values.webUi.service.port | default 8334 }}
  {{- end }}
{{- end }}
{{- if .Values.webUi.enabled }}
  PVC (habilitado): {{ .Values.webUi.persistence.existingClaim | default "generado autom√°ticamente" }}
{{ end }}
üìò Documentaci√≥n:
  ‚Üí https://github.com/mhorcajada/charts/tree/main/storj-gateway

‚öôÔ∏è Comprobaci√≥n r√°pida:
  kubectl get pods -l app=storj-gateway -n {{ .Release.Namespace }}
