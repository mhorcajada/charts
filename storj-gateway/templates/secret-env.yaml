{{- if and 
    (hasKey .Values "envSecret")
    (typeIs "map[string]interface {}" .Values.envSecret)
    (hasKey .Values.envSecret "enabled")
    (eq .Values.envSecret.enabled true)
    (or (not (hasKey .Values "vault")) (not (and (typeIs "map[string]interface {}" .Values.vault) (hasKey .Values.vault "enabled") (eq .Values.vault.enabled true))))
}}
# Secret template
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.envSecret.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "storj-gateway.labels" . | nindent 4 }}
type: Opaque
stringData:
  STORJ_ACCESS: {{ .Values.envSecret.data.STORJ_ACCESS | quote }}
  STORJ_KEY: {{ .Values.envSecret.data.STORJ_KEY | quote }}
  STORJ_SECRET: {{ .Values.envSecret.data.STORJ_SECRET | quote }}
{{- end }}
